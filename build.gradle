buildscript {
  ext.junitVersion="5.3.1"

  ext.addRepos = {
    mavenLocal()
    mavenCentral()
    maven {
      url "http://jcenter.bintray.com/"
    }
    flatDir {
      dirs 'libs' // For Oracle JDBC driver
    }
  }
  repositories addRepos
  dependencies {
    classpath(
        'no.skatteetaten.aurora.gradle.plugins:aurora-gradle-plugin:1.3.0',
        'org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE'
    )
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.10'
  id 'org.jetbrains.kotlin.plugin.spring' version '1.3.10'
  id 'org.springframework.boot' version '2.1.1.RELEASE'
  id 'org.jlleitschuh.gradle.ktlint' version '6.2.0'
  id 'com.github.ben-manes.versions' version '0.20.0'
}

repositories addRepos

ext.aurora = [
    requireStaging   : false,
    checkstyleConfigVersion: "2.1.0"
]

apply plugin: 'io.spring.dependency-management'
apply plugin: 'no.skatteetaten.plugins.aurora'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

[jar, distZip]*.enabled = true
[bootJar, distTar, bootDistTar, bootDistZip]*.enabled = false
configurations.archives.artifacts.removeIf { !it.delegate.archiveTask.enabled }

group = 'no.skatteetaten.aurora'

dependencies {
  compile(
      'org.jetbrains.kotlin:kotlin-reflect:1.3.0',
      'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
      'com.fasterxml.jackson.module:jackson-module-kotlin',
      'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
      "no.skatteetaten.aurora.springboot:aurora-spring-boot2-starter:1.3.1",
      "org.springframework.boot:spring-boot-starter-web",
      "org.springframework.boot:spring-boot-starter-security",
      "org.springframework.boot:spring-boot-starter-aop",
      "org.springframework.boot:spring-boot-starter-actuator",
      "org.springframework.boot:spring-boot-starter-jdbc",

      "org.apache.commons:commons-lang3",
      "com.google.guava:guava:27.0.1-jre",

      "com.oracle:ojdbc8:12.2.0.1",
      "org.postgresql:postgresql:42.2.5",

      "org.flywaydb:flyway-core"
  )

  testCompile(
      "org.spockframework:spock-spring:1.2-groovy-2.5",
      "org.springframework.boot:spring-boot-starter-test",
      "org.springframework.restdocs:spring-restdocs-mockmvc",
      "io.mockk:mockk:1.8.12",
      "com.willowtreeapps.assertk:assertk:0.10",
      "org.junit.jupiter:junit-jupiter-params:$junitVersion",
      "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  )
  testImplementation(
      "com.squareup.okhttp3:mockwebserver:3.11.0"
  )
  testRuntimeOnly(
      "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
      "org.junit.vintage:junit-vintage-engine:$junitVersion"
  )
}

task createSnippetsFolder {
  doLast {
    new File("$buildDir/docs/generated-snippets").mkdirs()
  }
}
// When tests are disabled, the build will fail because the generated-snippets folder does not exist.
// Let's create this folder to avoid a breaking build.
compileTestGroovy.dependsOn(createSnippetsFolder)
test.onlyIf { Boolean.getBoolean('run.tests') }

test {
  maxHeapSize = "512m"
  useJUnitPlatform()
}

compileTestGroovy.dependsOn compileTestKotlin
compileTestGroovy.classpath += files(compileTestKotlin.destinationDir)
testClasses.dependsOn compileTestGroovy

compileKotlin {
  kotlinOptions {
    suppressWarnings = true
    jvmTarget = 1.8
    freeCompilerArgs = ["-Xjsr305=strict"]
  }
}

compileTestKotlin {
  kotlinOptions {
    suppressWarnings = true
    jvmTarget = 1.8
  }
}
